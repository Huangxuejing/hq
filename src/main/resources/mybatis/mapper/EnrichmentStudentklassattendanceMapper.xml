<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taidii.staffdevelopment.hq.dao.mapper.EnrichmentStudentklassattendanceMapper">
  <resultMap id="BaseResultMap" type="com.taidii.staffdevelopment.hq.entity.EnrichmentStudentklassattendance">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="center_id" jdbcType="INTEGER" property="centerId" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="studentklass_id" jdbcType="INTEGER" property="studentklassId" />
    <result column="sign_in" jdbcType="INTEGER" property="signIn" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="child_id" jdbcType="INTEGER" property="childId" />
    <result column="klassschedule_id" jdbcType="INTEGER" property="klassscheduleId" />
    <result column="recorded_on" jdbcType="TIME" property="recordedOn" />
    <result column="temperature" jdbcType="DECIMAL" property="temperature" />
    <result column="weight" jdbcType="DECIMAL" property="weight" />
    <result column="pick_up_id" jdbcType="INTEGER" property="pickUpId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, center_id, date, studentklass_id, sign_in, student_id, child_id, klassschedule_id, 
    recorded_on, temperature, weight, pick_up_id
  </sql>
  <select id="selectByExample" parameterType="com.taidii.staffdevelopment.hq.entity.EnrichmentStudentklassattendanceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from enrichment_studentklassattendance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from enrichment_studentklassattendance
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from enrichment_studentklassattendance
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.taidii.staffdevelopment.hq.entity.EnrichmentStudentklassattendanceExample">
    delete from enrichment_studentklassattendance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taidii.staffdevelopment.hq.entity.EnrichmentStudentklassattendance">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into enrichment_studentklassattendance (center_id, date, studentklass_id, 
      sign_in, student_id, child_id, 
      klassschedule_id, recorded_on, temperature, 
      weight, pick_up_id)
    values (#{centerId,jdbcType=INTEGER}, #{date,jdbcType=DATE}, #{studentklassId,jdbcType=INTEGER}, 
      #{signIn,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{childId,jdbcType=INTEGER}, 
      #{klassscheduleId,jdbcType=INTEGER}, #{recordedOn,jdbcType=TIME}, #{temperature,jdbcType=DECIMAL}, 
      #{weight,jdbcType=DECIMAL}, #{pickUpId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.taidii.staffdevelopment.hq.entity.EnrichmentStudentklassattendance">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into enrichment_studentklassattendance
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="centerId != null">
        center_id,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="studentklassId != null">
        studentklass_id,
      </if>
      <if test="signIn != null">
        sign_in,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="childId != null">
        child_id,
      </if>
      <if test="klassscheduleId != null">
        klassschedule_id,
      </if>
      <if test="recordedOn != null">
        recorded_on,
      </if>
      <if test="temperature != null">
        temperature,
      </if>
      <if test="weight != null">
        weight,
      </if>
      <if test="pickUpId != null">
        pick_up_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="centerId != null">
        #{centerId,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="studentklassId != null">
        #{studentklassId,jdbcType=INTEGER},
      </if>
      <if test="signIn != null">
        #{signIn,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="childId != null">
        #{childId,jdbcType=INTEGER},
      </if>
      <if test="klassscheduleId != null">
        #{klassscheduleId,jdbcType=INTEGER},
      </if>
      <if test="recordedOn != null">
        #{recordedOn,jdbcType=TIME},
      </if>
      <if test="temperature != null">
        #{temperature,jdbcType=DECIMAL},
      </if>
      <if test="weight != null">
        #{weight,jdbcType=DECIMAL},
      </if>
      <if test="pickUpId != null">
        #{pickUpId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taidii.staffdevelopment.hq.entity.EnrichmentStudentklassattendanceExample" resultType="java.lang.Long">
    select count(*) from enrichment_studentklassattendance
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update enrichment_studentklassattendance
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.centerId != null">
        center_id = #{record.centerId,jdbcType=INTEGER},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.studentklassId != null">
        studentklass_id = #{record.studentklassId,jdbcType=INTEGER},
      </if>
      <if test="record.signIn != null">
        sign_in = #{record.signIn,jdbcType=INTEGER},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.childId != null">
        child_id = #{record.childId,jdbcType=INTEGER},
      </if>
      <if test="record.klassscheduleId != null">
        klassschedule_id = #{record.klassscheduleId,jdbcType=INTEGER},
      </if>
      <if test="record.recordedOn != null">
        recorded_on = #{record.recordedOn,jdbcType=TIME},
      </if>
      <if test="record.temperature != null">
        temperature = #{record.temperature,jdbcType=DECIMAL},
      </if>
      <if test="record.weight != null">
        weight = #{record.weight,jdbcType=DECIMAL},
      </if>
      <if test="record.pickUpId != null">
        pick_up_id = #{record.pickUpId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update enrichment_studentklassattendance
    set id = #{record.id,jdbcType=INTEGER},
      center_id = #{record.centerId,jdbcType=INTEGER},
      date = #{record.date,jdbcType=DATE},
      studentklass_id = #{record.studentklassId,jdbcType=INTEGER},
      sign_in = #{record.signIn,jdbcType=INTEGER},
      student_id = #{record.studentId,jdbcType=INTEGER},
      child_id = #{record.childId,jdbcType=INTEGER},
      klassschedule_id = #{record.klassscheduleId,jdbcType=INTEGER},
      recorded_on = #{record.recordedOn,jdbcType=TIME},
      temperature = #{record.temperature,jdbcType=DECIMAL},
      weight = #{record.weight,jdbcType=DECIMAL},
      pick_up_id = #{record.pickUpId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taidii.staffdevelopment.hq.entity.EnrichmentStudentklassattendance">
    update enrichment_studentklassattendance
    <set>
      <if test="centerId != null">
        center_id = #{centerId,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=DATE},
      </if>
      <if test="studentklassId != null">
        studentklass_id = #{studentklassId,jdbcType=INTEGER},
      </if>
      <if test="signIn != null">
        sign_in = #{signIn,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="childId != null">
        child_id = #{childId,jdbcType=INTEGER},
      </if>
      <if test="klassscheduleId != null">
        klassschedule_id = #{klassscheduleId,jdbcType=INTEGER},
      </if>
      <if test="recordedOn != null">
        recorded_on = #{recordedOn,jdbcType=TIME},
      </if>
      <if test="temperature != null">
        temperature = #{temperature,jdbcType=DECIMAL},
      </if>
      <if test="weight != null">
        weight = #{weight,jdbcType=DECIMAL},
      </if>
      <if test="pickUpId != null">
        pick_up_id = #{pickUpId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taidii.staffdevelopment.hq.entity.EnrichmentStudentklassattendance">
    update enrichment_studentklassattendance
    set center_id = #{centerId,jdbcType=INTEGER},
      date = #{date,jdbcType=DATE},
      studentklass_id = #{studentklassId,jdbcType=INTEGER},
      sign_in = #{signIn,jdbcType=INTEGER},
      student_id = #{studentId,jdbcType=INTEGER},
      child_id = #{childId,jdbcType=INTEGER},
      klassschedule_id = #{klassscheduleId,jdbcType=INTEGER},
      recorded_on = #{recordedOn,jdbcType=TIME},
      temperature = #{temperature,jdbcType=DECIMAL},
      weight = #{weight,jdbcType=DECIMAL},
      pick_up_id = #{pickUpId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
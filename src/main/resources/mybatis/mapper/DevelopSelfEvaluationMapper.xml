<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taidii.staffdevelopment.dao.mapper.DevelopSelfEvaluationMapper">
  <resultMap id="BaseResultMap" type="com.taidii.staffdevelopment.entity.DevelopSelfEvaluation">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modify" jdbcType="TIMESTAMP" property="gmtModify" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="school_id" jdbcType="INTEGER" property="schoolId" />
    <result column="user_id" jdbcType="INTEGER" property="userId" />
    <result column="duty_level_id" jdbcType="INTEGER" property="dutyLevelId" />
    <result column="duty_level_name" jdbcType="VARCHAR" property="dutyLevelName" />
    <result column="period" jdbcType="TINYINT" property="period" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="status" jdbcType="TINYINT" property="status" />
    <result column="evaluator_comment" jdbcType="VARCHAR" property="evaluatorComment" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gmt_create, gmt_modify, is_delete, school_id, user_id, duty_level_id, duty_level_name, 
    period, year, status, evaluator_comment
  </sql>
  <select id="selectByExample" parameterType="com.taidii.staffdevelopment.entity.DevelopSelfEvaluationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from develop_self_evaluation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from develop_self_evaluation
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from develop_self_evaluation
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.taidii.staffdevelopment.entity.DevelopSelfEvaluationExample">
    delete from develop_self_evaluation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taidii.staffdevelopment.entity.DevelopSelfEvaluation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into develop_self_evaluation (gmt_create, gmt_modify, is_delete, 
      school_id, user_id, duty_level_id, 
      duty_level_name, period, year, 
      status, evaluator_comment)
    values (#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModify,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=TINYINT}, 
      #{schoolId,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{dutyLevelId,jdbcType=INTEGER}, 
      #{dutyLevelName,jdbcType=VARCHAR}, #{period,jdbcType=TINYINT}, #{year,jdbcType=INTEGER}, 
      #{status,jdbcType=TINYINT}, #{evaluatorComment,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.taidii.staffdevelopment.entity.DevelopSelfEvaluation">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into develop_self_evaluation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModify != null">
        gmt_modify,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="schoolId != null">
        school_id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="dutyLevelId != null">
        duty_level_id,
      </if>
      <if test="dutyLevelName != null">
        duty_level_name,
      </if>
      <if test="period != null">
        period,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="evaluatorComment != null">
        evaluator_comment,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null">
        #{gmtModify,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="schoolId != null">
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="dutyLevelId != null">
        #{dutyLevelId,jdbcType=INTEGER},
      </if>
      <if test="dutyLevelName != null">
        #{dutyLevelName,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        #{period,jdbcType=TINYINT},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=TINYINT},
      </if>
      <if test="evaluatorComment != null">
        #{evaluatorComment,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taidii.staffdevelopment.entity.DevelopSelfEvaluationExample" resultType="java.lang.Long">
    select count(*) from develop_self_evaluation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update develop_self_evaluation
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModify != null">
        gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
      <if test="record.schoolId != null">
        school_id = #{record.schoolId,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        user_id = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.dutyLevelId != null">
        duty_level_id = #{record.dutyLevelId,jdbcType=INTEGER},
      </if>
      <if test="record.dutyLevelName != null">
        duty_level_name = #{record.dutyLevelName,jdbcType=VARCHAR},
      </if>
      <if test="record.period != null">
        period = #{record.period,jdbcType=TINYINT},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=TINYINT},
      </if>
      <if test="record.evaluatorComment != null">
        evaluator_comment = #{record.evaluatorComment,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update develop_self_evaluation
    set id = #{record.id,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP},
      is_delete = #{record.isDelete,jdbcType=TINYINT},
      school_id = #{record.schoolId,jdbcType=INTEGER},
      user_id = #{record.userId,jdbcType=INTEGER},
      duty_level_id = #{record.dutyLevelId,jdbcType=INTEGER},
      duty_level_name = #{record.dutyLevelName,jdbcType=VARCHAR},
      period = #{record.period,jdbcType=TINYINT},
      year = #{record.year,jdbcType=INTEGER},
      status = #{record.status,jdbcType=TINYINT},
      evaluator_comment = #{record.evaluatorComment,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taidii.staffdevelopment.entity.DevelopSelfEvaluation">
    update develop_self_evaluation
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null">
        gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="schoolId != null">
        school_id = #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="dutyLevelId != null">
        duty_level_id = #{dutyLevelId,jdbcType=INTEGER},
      </if>
      <if test="dutyLevelName != null">
        duty_level_name = #{dutyLevelName,jdbcType=VARCHAR},
      </if>
      <if test="period != null">
        period = #{period,jdbcType=TINYINT},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="evaluatorComment != null">
        evaluator_comment = #{evaluatorComment,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taidii.staffdevelopment.entity.DevelopSelfEvaluation">
    update develop_self_evaluation
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=TINYINT},
      school_id = #{schoolId,jdbcType=INTEGER},
      user_id = #{userId,jdbcType=INTEGER},
      duty_level_id = #{dutyLevelId,jdbcType=INTEGER},
      duty_level_name = #{dutyLevelName,jdbcType=VARCHAR},
      period = #{period,jdbcType=TINYINT},
      year = #{year,jdbcType=INTEGER},
      status = #{status,jdbcType=TINYINT},
      evaluator_comment = #{evaluatorComment,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
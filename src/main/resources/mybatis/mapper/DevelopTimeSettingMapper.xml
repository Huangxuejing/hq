<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taidii.staffdevelopment.dao.mapper.DevelopTimeSettingMapper">
  <resultMap id="BaseResultMap" type="com.taidii.staffdevelopment.entity.DevelopTimeSetting">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="gmt_create" jdbcType="TIMESTAMP" property="gmtCreate" />
    <result column="gmt_modify" jdbcType="TIMESTAMP" property="gmtModify" />
    <result column="is_delete" jdbcType="TINYINT" property="isDelete" />
    <result column="year" jdbcType="INTEGER" property="year" />
    <result column="period" jdbcType="TINYINT" property="period" />
    <result column="school_id" jdbcType="INTEGER" property="schoolId" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="teacher_end_time" jdbcType="TIMESTAMP" property="teacherEndTime" />
    <result column="execution_time" jdbcType="TIMESTAMP" property="executionTime" />
    <result column="execution_num" jdbcType="TINYINT" property="executionNum" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, gmt_create, gmt_modify, is_delete, year, period, school_id, start_time, end_time,teacher_end_time,execution_time,execution_num
  </sql>
  <select id="selectByExample" parameterType="com.taidii.staffdevelopment.entity.DevelopTimeSettingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from develop_time_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from develop_time_setting
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from develop_time_setting
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.taidii.staffdevelopment.entity.DevelopTimeSettingExample">
    delete from develop_time_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taidii.staffdevelopment.entity.DevelopTimeSetting">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into develop_time_setting (gmt_create, gmt_modify, is_delete, 
      year, period, school_id, 
      start_time, end_time,teacher_end_time,execution_time,execution_num)
    values (#{gmtCreate,jdbcType=TIMESTAMP}, #{gmtModify,jdbcType=TIMESTAMP}, #{isDelete,jdbcType=TINYINT}, 
      #{year,jdbcType=INTEGER}, #{period,jdbcType=TINYINT}, #{schoolId,jdbcType=INTEGER}, 
      #{startTime,jdbcType=TIMESTAMP}, #{endTime,jdbcType=TIMESTAMP},#{teacherEndTime,jdbcType=TIMESTAMP}, #{executionTime,jdbcType=TIMESTAMP}, #{executionNum,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="com.taidii.staffdevelopment.entity.DevelopTimeSetting">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into develop_time_setting
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        gmt_create,
      </if>
      <if test="gmtModify != null">
        gmt_modify,
      </if>
      <if test="isDelete != null">
        is_delete,
      </if>
      <if test="year != null">
        year,
      </if>
      <if test="period != null">
        period,
      </if>
      <if test="schoolId != null">
        school_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="teacherEndTime != null">
        teacher_end_time,
      </if>
      <if test="executionTime != null">
        execution_time,
      </if>
      <if test="executionNum != null">
        execution_num,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="gmtCreate != null">
        #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null">
        #{gmtModify,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="year != null">
        #{year,jdbcType=INTEGER},
      </if>
      <if test="period != null">
        #{period,jdbcType=TINYINT},
      </if>
      <if test="schoolId != null">
        #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="teacherEndTime != null">
        #{teacherEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="executionTime != null">
        #{executionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="executionNum != null">
        #{executionNum,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taidii.staffdevelopment.entity.DevelopTimeSettingExample" resultType="java.lang.Long">
    select count(*) from develop_time_setting
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update develop_time_setting
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.gmtCreate != null">
        gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.gmtModify != null">
        gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isDelete != null">
        is_delete = #{record.isDelete,jdbcType=TINYINT},
      </if>
      <if test="record.year != null">
        year = #{record.year,jdbcType=INTEGER},
      </if>
      <if test="record.period != null">
        period = #{record.period,jdbcType=TINYINT},
      </if>
      <if test="record.schoolId != null">
        school_id = #{record.schoolId,jdbcType=INTEGER},
      </if>
      <if test="record.startTime != null">
        start_time = #{record.startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.endTime != null">
        end_time = #{record.endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.teacherEndTime != null">
        teacher_end_time = #{record.teacherEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.executionTime != null">
        execution_time = #{record.executionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.executionNum != null">
        execution_num = #{record.executionNum,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update develop_time_setting
    set id = #{record.id,jdbcType=INTEGER},
      gmt_create = #{record.gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{record.gmtModify,jdbcType=TIMESTAMP},
      is_delete = #{record.isDelete,jdbcType=TINYINT},
      year = #{record.year,jdbcType=INTEGER},
      period = #{record.period,jdbcType=TINYINT},
      school_id = #{record.schoolId,jdbcType=INTEGER},
      start_time = #{record.startTime,jdbcType=TIMESTAMP},
      end_time = #{record.endTime,jdbcType=TIMESTAMP},
      teacher_end_time = #{record.teacherEndTime,jdbcType=TIMESTAMP},
      execution_time = #{record.executionTime,jdbcType=TIMESTAMP},
      execution_num = #{record.executionNum,jdbcType=TINYINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taidii.staffdevelopment.entity.DevelopTimeSetting">
    update develop_time_setting
    <set>
      <if test="gmtCreate != null">
        gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      </if>
      <if test="gmtModify != null">
        gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
      </if>
      <if test="isDelete != null">
        is_delete = #{isDelete,jdbcType=TINYINT},
      </if>
      <if test="year != null">
        year = #{year,jdbcType=INTEGER},
      </if>
      <if test="period != null">
        period = #{period,jdbcType=TINYINT},
      </if>
      <if test="schoolId != null">
        school_id = #{schoolId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="teacherEndTime != null">
        teacher_end_time = #{teacherEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="executionTime != null">
        execution_time = #{executionTime,jdbcType=TIMESTAMP},
      </if>
      <if test="executionNum != null">
        execution_num = #{executionNum,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taidii.staffdevelopment.entity.DevelopTimeSetting">
    update develop_time_setting
    set gmt_create = #{gmtCreate,jdbcType=TIMESTAMP},
      gmt_modify = #{gmtModify,jdbcType=TIMESTAMP},
      is_delete = #{isDelete,jdbcType=TINYINT},
      year = #{year,jdbcType=INTEGER},
      period = #{period,jdbcType=TINYINT},
      school_id = #{schoolId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      teacher_end_time = #{teacherEndTime,jdbcType=TIMESTAMP},
      execution_time = #{executionTime,jdbcType=TIMESTAMP},
      execution_num = #{executionNum,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
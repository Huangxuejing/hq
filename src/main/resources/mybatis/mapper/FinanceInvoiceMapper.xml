<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taidii.staffdevelopment.hq.dao.mapper.FinanceInvoiceMapper">
  <resultMap id="BaseResultMap" type="com.taidii.staffdevelopment.hq.entity.FinanceInvoice">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="invoice_no" jdbcType="VARCHAR" property="invoiceNo" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="date_created" jdbcType="DATE" property="dateCreated" />
    <result column="date_due" jdbcType="DATE" property="dateDue" />
    <result column="date_generated" jdbcType="TIMESTAMP" property="dateGenerated" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="void_remarks" jdbcType="VARCHAR" property="voidRemarks" />
    <result column="remarks" jdbcType="VARCHAR" property="remarks" />
    <result column="sales_person" jdbcType="VARCHAR" property="salesPerson" />
    <result column="auto_generated" jdbcType="INTEGER" property="autoGenerated" />
    <result column="balance" jdbcType="DECIMAL" property="balance" />
    <result column="center_id" jdbcType="INTEGER" property="centerId" />
    <result column="origin_balance" jdbcType="DECIMAL" property="originBalance" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="sold_to" jdbcType="VARCHAR" property="soldTo" />
    <result column="sold_to_email" jdbcType="VARCHAR" property="soldToEmail" />
    <result column="preset_payment_method" jdbcType="INTEGER" property="presetPaymentMethod" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, invoice_no, student_id, date_created, date_due, date_generated, status, void_remarks, 
    remarks, sales_person, auto_generated, balance, center_id, origin_balance, type, 
    sold_to, sold_to_email, preset_payment_method
  </sql>
  <select id="selectByExample" parameterType="com.taidii.staffdevelopment.hq.entity.FinanceInvoiceExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from finance_invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from finance_invoice
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from finance_invoice
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.taidii.staffdevelopment.hq.entity.FinanceInvoiceExample">
    delete from finance_invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taidii.staffdevelopment.hq.entity.FinanceInvoice">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into finance_invoice (invoice_no, student_id, date_created, 
      date_due, date_generated, status, 
      void_remarks, remarks, sales_person, 
      auto_generated, balance, center_id, 
      origin_balance, type, sold_to, 
      sold_to_email, preset_payment_method)
    values (#{invoiceNo,jdbcType=VARCHAR}, #{studentId,jdbcType=INTEGER}, #{dateCreated,jdbcType=DATE}, 
      #{dateDue,jdbcType=DATE}, #{dateGenerated,jdbcType=TIMESTAMP}, #{status,jdbcType=INTEGER}, 
      #{voidRemarks,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}, #{salesPerson,jdbcType=VARCHAR}, 
      #{autoGenerated,jdbcType=INTEGER}, #{balance,jdbcType=DECIMAL}, #{centerId,jdbcType=INTEGER}, 
      #{originBalance,jdbcType=DECIMAL}, #{type,jdbcType=INTEGER}, #{soldTo,jdbcType=VARCHAR}, 
      #{soldToEmail,jdbcType=VARCHAR}, #{presetPaymentMethod,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.taidii.staffdevelopment.hq.entity.FinanceInvoice">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into finance_invoice
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="invoiceNo != null">
        invoice_no,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="dateCreated != null">
        date_created,
      </if>
      <if test="dateDue != null">
        date_due,
      </if>
      <if test="dateGenerated != null">
        date_generated,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="voidRemarks != null">
        void_remarks,
      </if>
      <if test="remarks != null">
        remarks,
      </if>
      <if test="salesPerson != null">
        sales_person,
      </if>
      <if test="autoGenerated != null">
        auto_generated,
      </if>
      <if test="balance != null">
        balance,
      </if>
      <if test="centerId != null">
        center_id,
      </if>
      <if test="originBalance != null">
        origin_balance,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="soldTo != null">
        sold_to,
      </if>
      <if test="soldToEmail != null">
        sold_to_email,
      </if>
      <if test="presetPaymentMethod != null">
        preset_payment_method,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="invoiceNo != null">
        #{invoiceNo,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="dateCreated != null">
        #{dateCreated,jdbcType=DATE},
      </if>
      <if test="dateDue != null">
        #{dateDue,jdbcType=DATE},
      </if>
      <if test="dateGenerated != null">
        #{dateGenerated,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="voidRemarks != null">
        #{voidRemarks,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="salesPerson != null">
        #{salesPerson,jdbcType=VARCHAR},
      </if>
      <if test="autoGenerated != null">
        #{autoGenerated,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        #{balance,jdbcType=DECIMAL},
      </if>
      <if test="centerId != null">
        #{centerId,jdbcType=INTEGER},
      </if>
      <if test="originBalance != null">
        #{originBalance,jdbcType=DECIMAL},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="soldTo != null">
        #{soldTo,jdbcType=VARCHAR},
      </if>
      <if test="soldToEmail != null">
        #{soldToEmail,jdbcType=VARCHAR},
      </if>
      <if test="presetPaymentMethod != null">
        #{presetPaymentMethod,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taidii.staffdevelopment.hq.entity.FinanceInvoiceExample" resultType="java.lang.Long">
    select count(*) from finance_invoice
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update finance_invoice
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.invoiceNo != null">
        invoice_no = #{record.invoiceNo,jdbcType=VARCHAR},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.dateCreated != null">
        date_created = #{record.dateCreated,jdbcType=DATE},
      </if>
      <if test="record.dateDue != null">
        date_due = #{record.dateDue,jdbcType=DATE},
      </if>
      <if test="record.dateGenerated != null">
        date_generated = #{record.dateGenerated,jdbcType=TIMESTAMP},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.voidRemarks != null">
        void_remarks = #{record.voidRemarks,jdbcType=VARCHAR},
      </if>
      <if test="record.remarks != null">
        remarks = #{record.remarks,jdbcType=VARCHAR},
      </if>
      <if test="record.salesPerson != null">
        sales_person = #{record.salesPerson,jdbcType=VARCHAR},
      </if>
      <if test="record.autoGenerated != null">
        auto_generated = #{record.autoGenerated,jdbcType=INTEGER},
      </if>
      <if test="record.balance != null">
        balance = #{record.balance,jdbcType=DECIMAL},
      </if>
      <if test="record.centerId != null">
        center_id = #{record.centerId,jdbcType=INTEGER},
      </if>
      <if test="record.originBalance != null">
        origin_balance = #{record.originBalance,jdbcType=DECIMAL},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.soldTo != null">
        sold_to = #{record.soldTo,jdbcType=VARCHAR},
      </if>
      <if test="record.soldToEmail != null">
        sold_to_email = #{record.soldToEmail,jdbcType=VARCHAR},
      </if>
      <if test="record.presetPaymentMethod != null">
        preset_payment_method = #{record.presetPaymentMethod,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update finance_invoice
    set id = #{record.id,jdbcType=INTEGER},
      invoice_no = #{record.invoiceNo,jdbcType=VARCHAR},
      student_id = #{record.studentId,jdbcType=INTEGER},
      date_created = #{record.dateCreated,jdbcType=DATE},
      date_due = #{record.dateDue,jdbcType=DATE},
      date_generated = #{record.dateGenerated,jdbcType=TIMESTAMP},
      status = #{record.status,jdbcType=INTEGER},
      void_remarks = #{record.voidRemarks,jdbcType=VARCHAR},
      remarks = #{record.remarks,jdbcType=VARCHAR},
      sales_person = #{record.salesPerson,jdbcType=VARCHAR},
      auto_generated = #{record.autoGenerated,jdbcType=INTEGER},
      balance = #{record.balance,jdbcType=DECIMAL},
      center_id = #{record.centerId,jdbcType=INTEGER},
      origin_balance = #{record.originBalance,jdbcType=DECIMAL},
      type = #{record.type,jdbcType=INTEGER},
      sold_to = #{record.soldTo,jdbcType=VARCHAR},
      sold_to_email = #{record.soldToEmail,jdbcType=VARCHAR},
      preset_payment_method = #{record.presetPaymentMethod,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taidii.staffdevelopment.hq.entity.FinanceInvoice">
    update finance_invoice
    <set>
      <if test="invoiceNo != null">
        invoice_no = #{invoiceNo,jdbcType=VARCHAR},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="dateCreated != null">
        date_created = #{dateCreated,jdbcType=DATE},
      </if>
      <if test="dateDue != null">
        date_due = #{dateDue,jdbcType=DATE},
      </if>
      <if test="dateGenerated != null">
        date_generated = #{dateGenerated,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="voidRemarks != null">
        void_remarks = #{voidRemarks,jdbcType=VARCHAR},
      </if>
      <if test="remarks != null">
        remarks = #{remarks,jdbcType=VARCHAR},
      </if>
      <if test="salesPerson != null">
        sales_person = #{salesPerson,jdbcType=VARCHAR},
      </if>
      <if test="autoGenerated != null">
        auto_generated = #{autoGenerated,jdbcType=INTEGER},
      </if>
      <if test="balance != null">
        balance = #{balance,jdbcType=DECIMAL},
      </if>
      <if test="centerId != null">
        center_id = #{centerId,jdbcType=INTEGER},
      </if>
      <if test="originBalance != null">
        origin_balance = #{originBalance,jdbcType=DECIMAL},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="soldTo != null">
        sold_to = #{soldTo,jdbcType=VARCHAR},
      </if>
      <if test="soldToEmail != null">
        sold_to_email = #{soldToEmail,jdbcType=VARCHAR},
      </if>
      <if test="presetPaymentMethod != null">
        preset_payment_method = #{presetPaymentMethod,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taidii.staffdevelopment.hq.entity.FinanceInvoice">
    update finance_invoice
    set invoice_no = #{invoiceNo,jdbcType=VARCHAR},
      student_id = #{studentId,jdbcType=INTEGER},
      date_created = #{dateCreated,jdbcType=DATE},
      date_due = #{dateDue,jdbcType=DATE},
      date_generated = #{dateGenerated,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      void_remarks = #{voidRemarks,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR},
      sales_person = #{salesPerson,jdbcType=VARCHAR},
      auto_generated = #{autoGenerated,jdbcType=INTEGER},
      balance = #{balance,jdbcType=DECIMAL},
      center_id = #{centerId,jdbcType=INTEGER},
      origin_balance = #{originBalance,jdbcType=DECIMAL},
      type = #{type,jdbcType=INTEGER},
      sold_to = #{soldTo,jdbcType=VARCHAR},
      sold_to_email = #{soldToEmail,jdbcType=VARCHAR},
      preset_payment_method = #{presetPaymentMethod,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>
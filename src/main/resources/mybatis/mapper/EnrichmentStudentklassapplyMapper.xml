<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.taidii.staffdevelopment.hq.dao.mapper.EnrichmentStudentklassapplyMapper">
  <resultMap id="BaseResultMap" type="com.taidii.staffdevelopment.hq.entity.EnrichmentStudentklassapply">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="center_id" jdbcType="INTEGER" property="centerId" />
    <result column="date" jdbcType="DATE" property="date" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="child_id" jdbcType="INTEGER" property="childId" />
    <result column="klassschedule_id" jdbcType="INTEGER" property="klassscheduleId" />
    <result column="studentklass_id" jdbcType="INTEGER" property="studentklassId" />
    <result column="created_date" jdbcType="TIMESTAMP" property="createdDate" />
    <result column="created_by_id" jdbcType="INTEGER" property="createdById" />
    <result column="last_update" jdbcType="TIMESTAMP" property="lastUpdate" />
    <result column="last_update_by_id" jdbcType="INTEGER" property="lastUpdateById" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, status, type, center_id, date, student_id, child_id, klassschedule_id, studentklass_id, 
    created_date, created_by_id, last_update, last_update_by_id
  </sql>
  <select id="selectByExample" parameterType="com.taidii.staffdevelopment.hq.entity.EnrichmentStudentklassapplyExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from enrichment_studentklassapply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from enrichment_studentklassapply
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from enrichment_studentklassapply
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.taidii.staffdevelopment.hq.entity.EnrichmentStudentklassapplyExample">
    delete from enrichment_studentklassapply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.taidii.staffdevelopment.hq.entity.EnrichmentStudentklassapply">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into enrichment_studentklassapply (status, type, center_id, 
      date, student_id, child_id, 
      klassschedule_id, studentklass_id, created_date, 
      created_by_id, last_update, last_update_by_id
      )
    values (#{status,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{centerId,jdbcType=INTEGER}, 
      #{date,jdbcType=DATE}, #{studentId,jdbcType=INTEGER}, #{childId,jdbcType=INTEGER}, 
      #{klassscheduleId,jdbcType=INTEGER}, #{studentklassId,jdbcType=INTEGER}, #{createdDate,jdbcType=TIMESTAMP}, 
      #{createdById,jdbcType=INTEGER}, #{lastUpdate,jdbcType=TIMESTAMP}, #{lastUpdateById,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.taidii.staffdevelopment.hq.entity.EnrichmentStudentklassapply">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into enrichment_studentklassapply
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="status != null">
        status,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="centerId != null">
        center_id,
      </if>
      <if test="date != null">
        date,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="childId != null">
        child_id,
      </if>
      <if test="klassscheduleId != null">
        klassschedule_id,
      </if>
      <if test="studentklassId != null">
        studentklass_id,
      </if>
      <if test="createdDate != null">
        created_date,
      </if>
      <if test="createdById != null">
        created_by_id,
      </if>
      <if test="lastUpdate != null">
        last_update,
      </if>
      <if test="lastUpdateById != null">
        last_update_by_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="centerId != null">
        #{centerId,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        #{date,jdbcType=DATE},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="childId != null">
        #{childId,jdbcType=INTEGER},
      </if>
      <if test="klassscheduleId != null">
        #{klassscheduleId,jdbcType=INTEGER},
      </if>
      <if test="studentklassId != null">
        #{studentklassId,jdbcType=INTEGER},
      </if>
      <if test="createdDate != null">
        #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdById != null">
        #{createdById,jdbcType=INTEGER},
      </if>
      <if test="lastUpdate != null">
        #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateById != null">
        #{lastUpdateById,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.taidii.staffdevelopment.hq.entity.EnrichmentStudentklassapplyExample" resultType="java.lang.Long">
    select count(*) from enrichment_studentklassapply
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update enrichment_studentklassapply
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.centerId != null">
        center_id = #{record.centerId,jdbcType=INTEGER},
      </if>
      <if test="record.date != null">
        date = #{record.date,jdbcType=DATE},
      </if>
      <if test="record.studentId != null">
        student_id = #{record.studentId,jdbcType=INTEGER},
      </if>
      <if test="record.childId != null">
        child_id = #{record.childId,jdbcType=INTEGER},
      </if>
      <if test="record.klassscheduleId != null">
        klassschedule_id = #{record.klassscheduleId,jdbcType=INTEGER},
      </if>
      <if test="record.studentklassId != null">
        studentklass_id = #{record.studentklassId,jdbcType=INTEGER},
      </if>
      <if test="record.createdDate != null">
        created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createdById != null">
        created_by_id = #{record.createdById,jdbcType=INTEGER},
      </if>
      <if test="record.lastUpdate != null">
        last_update = #{record.lastUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.lastUpdateById != null">
        last_update_by_id = #{record.lastUpdateById,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update enrichment_studentklassapply
    set id = #{record.id,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      type = #{record.type,jdbcType=INTEGER},
      center_id = #{record.centerId,jdbcType=INTEGER},
      date = #{record.date,jdbcType=DATE},
      student_id = #{record.studentId,jdbcType=INTEGER},
      child_id = #{record.childId,jdbcType=INTEGER},
      klassschedule_id = #{record.klassscheduleId,jdbcType=INTEGER},
      studentklass_id = #{record.studentklassId,jdbcType=INTEGER},
      created_date = #{record.createdDate,jdbcType=TIMESTAMP},
      created_by_id = #{record.createdById,jdbcType=INTEGER},
      last_update = #{record.lastUpdate,jdbcType=TIMESTAMP},
      last_update_by_id = #{record.lastUpdateById,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.taidii.staffdevelopment.hq.entity.EnrichmentStudentklassapply">
    update enrichment_studentklassapply
    <set>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="centerId != null">
        center_id = #{centerId,jdbcType=INTEGER},
      </if>
      <if test="date != null">
        date = #{date,jdbcType=DATE},
      </if>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="childId != null">
        child_id = #{childId,jdbcType=INTEGER},
      </if>
      <if test="klassscheduleId != null">
        klassschedule_id = #{klassscheduleId,jdbcType=INTEGER},
      </if>
      <if test="studentklassId != null">
        studentklass_id = #{studentklassId,jdbcType=INTEGER},
      </if>
      <if test="createdDate != null">
        created_date = #{createdDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createdById != null">
        created_by_id = #{createdById,jdbcType=INTEGER},
      </if>
      <if test="lastUpdate != null">
        last_update = #{lastUpdate,jdbcType=TIMESTAMP},
      </if>
      <if test="lastUpdateById != null">
        last_update_by_id = #{lastUpdateById,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.taidii.staffdevelopment.hq.entity.EnrichmentStudentklassapply">
    update enrichment_studentklassapply
    set status = #{status,jdbcType=INTEGER},
      type = #{type,jdbcType=INTEGER},
      center_id = #{centerId,jdbcType=INTEGER},
      date = #{date,jdbcType=DATE},
      student_id = #{studentId,jdbcType=INTEGER},
      child_id = #{childId,jdbcType=INTEGER},
      klassschedule_id = #{klassscheduleId,jdbcType=INTEGER},
      studentklass_id = #{studentklassId,jdbcType=INTEGER},
      created_date = #{createdDate,jdbcType=TIMESTAMP},
      created_by_id = #{createdById,jdbcType=INTEGER},
      last_update = #{lastUpdate,jdbcType=TIMESTAMP},
      last_update_by_id = #{lastUpdateById,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>